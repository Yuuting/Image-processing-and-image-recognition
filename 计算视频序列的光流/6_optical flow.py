#-------------------------------------------------------------------------------------------------
import numpy as np
import cv2
#-------------------------------------------------------------------------------------------------
cap = cv2.VideoCapture('shibuya.mp4')
#-------------------------------------------------------------------------------------------------
feature_params = dict( maxCorners = 10,
                       qualityLevel = 0.1,
                       minDistance = 10,
                       blockSize = 3 )
#-------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------
lk_params = dict(winSize = (15,15),
                  maxLevel = 0,
                  criteria = (cv2.TERM_CRITERIA_EPS | cv2.TERM_CRITERIA_COUNT, 10, 0.03))

#-------------------------------------------------------------------------------------------------
color = np.random.randint(0,255,(100,3))
#-------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------
ret, old_frame = cap.read()
old_gray = cv2.cvtColor(old_frame, cv2.COLOR_BGR2GRAY)
roi = np.zeros_like(old_gray)
x,y,w,h = 266,143,150,150
roi[y:y+h, x:x+w] = 255
p0 = cv2.goodFeaturesToTrack(old_gray, mask = roi, **feature_params)
#-------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------
mask = np.zeros_like(old_frame)
#-------------------------------------------------------------------------------------------------
while(1):
    ret,frame = cap.read()
    if not ret:
      break
    frame_gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    # -------------------------------------------------------------------------------------------------
    # -------------------------------------------------------------------------------------------------
    p1, st, err = cv2.calcOpticalFlowPyrLK(old_gray, frame_gray, p0, None, **lk_params)
    # -------------------------------------------------------------------------------------------------
    # -------------------------------------------------------------------------------------------------
    good_new = p1[st==1]
    good_old = p0[st==1]
    # -------------------------------------------------------------------------------------------------
    # -------------------------------------------------------------------------------------------------
    for i,(new,old) in enumerate(zip(good_new,good_old)):
        a,b = new.ravel()
        c,d = old.ravel()
        mask = cv2.line(mask, (a,b),(c,d), color[i].tolist(), 2)
        frame = cv2.circle(frame,(a,b),3,color[i].tolist(),-1)
    img = cv2.add(frame,mask)

    cv2.imshow('frame',img)
    key = cv2.waitKey(60) & 0xff
    if key == 27:
        break
    elif key == ord(' '):
        cv2.waitKey(0)

    old_gray = frame_gray.copy()
    p0 = good_new.reshape(-1,1,2)
#-------------------------------------------------------------------------------------------------
cv2.destroyAllWindows()
cap.release()
#-------------------------------------------------------------------------------------------------